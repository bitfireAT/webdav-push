@startuml

title WebDAV-Push over UnifiedPush (UP) â€“ Flowchart

actor "__Client__\n//User agent//" as C
entity "WebDAV server\n//Application server//" as WS
entity "UP distributor\n(on client device)" as UPD
entity "UP server\n//Push service//" as UPS

group Prepare //push message subscription//
C -> UPD: Request UP endpoint
UPS <-> UPD: (by UP)
UPD -> C: Endpoint URL //(= push resource)// 
end

group __Register__ //push resource// at WebDAV-Push server
C -> WS: PROPFIND to discover WebDAV-Push support
C <- WS: Advertise WebDAV-Push and supported __transports__

C -> WS: __Register__ //push resource// (= send UP endpoint) for collection
end

group On collection update (for instance when an event was added)
WS -> UPS: //Push message// with __collection topic__

UPS -> UPD: (by UP)

UPD -> C: onMessage() with __collection topic__
C <--> WS: (PROPFIND, or whatever the client does when a collection has changed)
end

legend
//Italic//: RFC 8030 (Web Push) terminology
__Underlined__: WebDAV-Push terminology
endlegend

@enduml
